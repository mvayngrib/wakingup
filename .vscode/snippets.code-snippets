{
	// Place your plants workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"new component": {
		"scope": "javascript,typescript",
		"prefix": "comp",
		"body": [
			"import React from 'react'",
			"import PropTypes from '~/constants/prop-types'",
			"import styled from 'shakl'",
			"import Block from 'components/Block'",
			"import { P, H1 } from 'components/Text'",
			"",
			"const $1 = (props) => {",
			"  return (",
			"    <Block>",
			"      <Text center>$1</Text>",
			"    </Block>",
			"  )",
			"}",
			"",
			"$1.defaultProps = {",
			"}",
			"",
			"$1.propTypes = {",
			"}",
			"",
			"export default $1",
		],
		"description": "new component"
	},
	"new screen": {
		"scope": "javascript,typescript",
		"prefix": "scr",
		"body": [
			"import React from 'react'",
			"import PropTypes from '~/constants/prop-types'",
			"import styled from 'shakl'",
			"import { Screen, Header, Body, Footer, P, H1, H2, Button, Block, Icon } from 'components'",
			"",
			"const $1 = (props) => {",
			"  return (",
			"    <Screen>",
			"      <Header>",
			"        <H1 left>$1</H1>",
			"      </Header>",
			"      <Body>",
			"        <P>$1</P>",
			"      </Body>",
			"      <Footer>",
			"        <P>footer</P>",
			"      </Footer>",
			"    </Screen>",
			"  )",
			"}",
			"",
			"$1.defaultProps = {",
			"}",
			"",
			"$1.propTypes = {",
			"}",
			"",
			"export default $1",
		],
		"description": "new screen"
	},
	"stringify": {
		"scope": "javascript,typescript",
		"prefix": "str",
		"body": [
			"JSON.stringify($1, null, 2)"
		]
	},
	"alert stringified": {
		"scope": "javascript,typescript",
		"prefix": "al",
		"body": [
			"Alert.alert(\"$1\", JSON.stringify($2, null, 2))"
		]
	}
}
